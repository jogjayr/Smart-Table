{"version":3,"sources":["smart-table.min.js"],"names":["ng","undefined","module","run","$templateCache","put","constant","pagination","template","itemsByPage","displayedPages","search","delay","inputEvent","select","mode","selectedClass","sort","ascentClass","descentClass","skipNatural","pipe","controller","$scope","$parse","$filter","$attrs","copyRefs","src","concat","updateSafeCopy","safeCopy","safeGetter","pipeAfterSafeCopy","ctrl","deepDelete","object","path","indexOf","partials","split","key","pop","parentPath","join","parentObject","Object","keys","length","filtered","lastSelected","lastHighlighted","propertyName","stTable","displayGetter","displaySetter","assign","orderBy","filter","tableState","start","totalItemCount","this","stSafeSrc","$watch","safeSrc","newValue","oldValue","sortBy","predicate","reverse","isFunction","functionName","name","input","predicateObject","prop","isString","trim","output","number","numberOfPages","Math","ceil","slice","parseInt","row","rows","index","isSelected","highlight","rowToHighlight","allRows","map","isHighlighted","getFilteredCollection","setFilterFunction","filterName","setSortFunction","sortFunctionName","preventPipeOnWatch","directive","restrict","link","scope","element","attr","stSetFilter","stSetSort","stConfig","$timeout","require","tableCtrl","promise","throttle","stDelay","event","stInputEvent","$observe","value","predicateExpression","stSearch","bind","evt","originalEvent","cancel","target","stSelectMode","$apply","addClass","removeClass","func","getter","isArray","stSort","sortDefault","classAscent","stClassAscent","classDescent","stClassDescent","stateClasses","stSkipNatural","stSortDefault","$eval","stItemsByPage","stDisplayedPages","stPageChange","templateUrl","attrs","stTemplate","redraw","end","i","paginationState","prevPage","currentPage","floor","max","abs","pages","numPages","push","newPage","selectPage","page","config","stPipe","pre","pipePromise","post","angular"],"mappings":"CAAA,SAAWA,EAAIC,GACX,YAEJD,GAAGE,OAAO,kBAAmBC,KAAK,iBAAkB,SAAUC,GAC1DA,EAAeC,IAAI,uCACf,yMAMRL,EAAGE,OAAO,eACPI,SAAS,YACRC,YACEC,SAAU,uCACVC,YAAa,GACbC,eAAgB,GAElBC,QACEC,MAAO,IACPC,WAAY,SAEdC,QACEC,KAAM,SACNC,cAAe,eAEjBC,MACEC,YAAa,iBACbC,aAAc,kBACdC,aAAa,EACbR,MAAM,KAERS,MACET,MAAO,OAGbZ,EAAGE,OAAO,eACPoB,WAAW,qBAAsB,SAAU,SAAU,UAAW,SAAU,SAA4BC,EAAQC,EAAQC,EAASC,GAsB9H,QAASC,GAAUC,GACjB,MAAOA,MAASC,OAAOD,MAGzB,QAASE,KACPC,EAAWJ,EAASK,EAAWT,IAC3BU,KAAsB,GACxBC,EAAKb,OAIT,QAASc,GAAYC,EAAQC,GAC3B,GAAyB,IAArBA,EAAKC,QAAQ,KAAY,CAC3B,GAAIC,GAAWF,EAAKG,MAAM,KACtBC,EAAMF,EAASG,MACfC,EAAaJ,EAASK,KAAK,KAC3BC,EAAerB,EAAOmB,GAAYP,SAC/BS,GAAaJ,GACoB,GAApCK,OAAOC,KAAKF,GAAcG,QAC5Bb,EAAWC,EAAQO,cAGdP,GAAOC,GA3ClB,GAGIL,GAYAiB,EAGAC,EACAC,EAnBAC,EAAe1B,EAAO2B,QACtBC,EAAgB9B,EAAO4B,GACvBG,EAAgBD,EAAcE,OAE9BC,EAAUhC,EAAQ,WAClBiC,EAASjC,EAAQ,UACjBM,EAAWJ,EAAS2B,EAAc/B,IAClCoC,GACF1C,QACAN,UACAJ,YACEqD,MAAO,EACPC,eAAgB,IAIhB5B,GAAoB,EACpBC,EAAO4B,IA8BPpC,GAAOqC,YACT/B,EAAaR,EAAOE,EAAOqC,WAC3BxC,EAAOyC,OAAO,WACZ,GAAIC,GAAUjC,EAAWT,EACzB,OAAO0C,GAAUA,EAAQjB,OAAS,GAEjC,SAAUkB,GACPA,IAAanC,EAASiB,QACxBlB,MAGJP,EAAOyC,OAAO,WACZ,MAAOhC,GAAWT,IACjB,SAAU2C,EAAUC,GACjBD,IAAaC,IACfR,EAAWpD,WAAWqD,MAAQ,EAC9BT,GAAkB,EAClBrB,QAUNgC,KAAKM,OAAS,SAAiBC,EAAWC,GAWxC,MAVAX,GAAW1C,KAAKoD,UAAYA,EAC5BV,EAAW1C,KAAKqD,QAAUA,KAAY,EAElCtE,EAAGuE,WAAWF,GAChBV,EAAW1C,KAAKuD,aAAeH,EAAUI,WAElCd,GAAW1C,KAAKuD,aAGzBb,EAAWpD,WAAWqD,MAAQ,EACvBE,KAAKzC,QAQdyC,KAAKnD,OAAS,SAAiB+D,EAAOL,GACpC,GAAIM,GAAkBhB,EAAWhD,OAAOgE,oBACpCC,EAAOP,EAAYA,EAAY,GAUnC,OARAK,GAAQ1E,EAAG6E,SAASH,GAASA,EAAMI,OAASJ,EAC5ClD,EAAOoD,GAAMpB,OAAOmB,EAAiBD,GAEhCA,GACHvC,EAAWwC,EAAiBC,GAE9BjB,EAAWhD,OAAOgE,gBAAkBA,EACpChB,EAAWpD,WAAWqD,MAAQ,EACvBE,KAAKzC,QAMdyC,KAAKzC,KAAO,WACV,GACI0D,GADAxE,EAAaoD,EAAWpD,UAE5B0C,GAAWU,EAAWhD,OAAOgE,gBAAkBjB,EAAO3B,EAAU4B,EAAWhD,OAAOgE,iBAAmB5C,EACjG4B,EAAW1C,KAAKoD,YAClBpB,EAAWQ,EAAQR,EAAUU,EAAW1C,KAAKoD,UAAWV,EAAW1C,KAAKqD,UAE1E/D,EAAWsD,eAAiBZ,EAASD,OACjCzC,EAAWyE,SAAW/E,IACxBM,EAAW0E,cAAgBhC,EAASD,OAAS,EAAIkC,KAAKC,KAAKlC,EAASD,OAASzC,EAAWyE,QAAU,EAClGzE,EAAWqD,MAAQrD,EAAWqD,OAASX,EAASD,QAAUzC,EAAW0E,cAAgB,GAAK1E,EAAWyE,OAASzE,EAAWqD,MACzHmB,EAAS9B,EAASmC,MAAM7E,EAAWqD,MAAOrD,EAAWqD,MAAQyB,SAAS9E,EAAWyE,UAEnFzB,EAAchC,EAAQwD,GAAU9B,IAQlCa,KAAKhD,OAAS,SAAiBwE,EAAKvE,GAClC,GAAIwE,GAAO5D,EAAS2B,EAAc/B,IAC9BiE,EAAQD,EAAKjD,QAAQgD,EACX,MAAVE,IACW,WAATzE,GACFuE,EAAIG,WAAaH,EAAIG,cAAe,EAChCvC,IACFA,EAAauC,YAAa,GAE5BvC,EAAeoC,EAAIG,cAAe,EAAOH,EAAMrF,GAE/CsF,EAAKC,GAAOC,YAAcF,EAAKC,GAAOC,aAW5C3B,KAAK4B,UAAY,SAAmBC,GAElC,GAAIC,GAAUjE,EAAS2B,EAAc/B,GACrCqE,GAAQC,IAAI,SAASP,GACnBA,EAAIQ,eAAgB,IAEtBH,EAAeG,eAAgB,GASjChC,KAAKsB,MAAQ,SAAiBxB,EAAOoB,GAGnC,MAFArB,GAAWpD,WAAWqD,MAAQA,EAC9BD,EAAWpD,WAAWyE,OAASA,EACxBlB,KAAKzC,QAOdyC,KAAKH,WAAa,WAChB,MAAOA,IAGTG,KAAKiC,sBAAwB,WAC3B,MAAO9C,IAAYlB,GAOrB+B,KAAKkC,kBAAoB,SAA4BC,GACnDvC,EAASjC,EAAQwE,IAOnBnC,KAAKoC,gBAAkB,SAA0BC,GAC/C1C,EAAUhC,EAAQ0E,IAOpBrC,KAAKsC,mBAAqB,WACxBnE,GAAoB,MAGvBoE,UAAU,UAAW,WACpB,OACEC,SAAU,IACVhF,WAAY,oBACZiF,KAAM,SAAUC,EAAOC,EAASC,EAAMxE,GAEhCwE,EAAKC,aACPzE,EAAK8D,kBAAkBU,EAAKC,aAG1BD,EAAKE,WACP1E,EAAKgE,gBAAgBQ,EAAKE,eAMpC5G,EAAGE,OAAO,eACPmG,UAAU,YAAa,WAAY,WAAW,SAAU,SAAUQ,EAAUC,EAAUtF,GACrF,OACEuF,QAAS,WACTR,KAAM,SAAUC,EAAOC,EAASC,EAAMxE,GACpC,GAAI8E,GAAY9E,EACZ+E,EAAU,KACVC,EAAWR,EAAKS,SAAWN,EAASlG,OAAOC,MAC3CwG,EAAQV,EAAKW,cAAgBR,EAASlG,OAAOE,UAEjD6F,GAAKY,SAAS,WAAY,SAAUpD,EAAUC,GAC5C,GAAIO,GAAQ+B,EAAQ,GAAGc,KACnBrD,KAAaC,GAAYO,IAC3BxC,EAAKyB,aAAahD,UAClBqG,EAAUrG,OAAO+D,EAAOR,MAK5BsC,EAAMxC,OAAO,WACX,MAAO9B,GAAKyB,aAAahD,QACxB,SAAUuD,GACX,GAAIsD,GAAsBd,EAAKe,UAAY,GACvCvD,GAASS,iBAAmBnD,EAAOgG,GAAqBtD,EAASS,mBAAqB8B,EAAQ,GAAGc,QACnGd,EAAQ,GAAGc,MAAQ/F,EAAOgG,GAAqBtD,EAASS,kBAAoB,MAE7E,GAGH8B,EAAQiB,KAAKN,EAAO,SAAUO,GAC5BA,EAAMA,EAAIC,eAAiBD,EACX,OAAZV,GACFH,EAASe,OAAOZ,GAGlBA,EAAUH,EAAS,WACjBE,EAAUrG,OAAOgH,EAAIG,OAAOP,MAAOb,EAAKe,UAAY,IACpDR,EAAU,MACTC,UAMblH,EAAGE,OAAO,eACPmG,UAAU,eAAgB,WAAY,SAAUQ,GAC/C,OACEP,SAAU,IACVS,QAAS,WACTP,OACElB,IAAK,gBAEPiB,KAAM,SAAUC,EAAOC,EAASC,EAAMxE,GACpC,GAAInB,GAAO2F,EAAKqB,cAAgBlB,EAAS/F,OAAOC,IAChD0F,GAAQiB,KAAK,QAAS,WACpBlB,EAAMwB,OAAO,WACX9F,EAAKpB,OAAO0F,EAAMlB,IAAKvE,OAI3ByF,EAAMxC,OAAO,iBAAkB,SAAUE,GACnCA,KAAa,EACfuC,EAAQwB,SAASpB,EAAS/F,OAAOE,eAEjCyF,EAAQyB,YAAYrB,EAAS/F,OAAOE,sBAOhDhB,EAAGE,OAAO,eACPmG,UAAU,UAAW,WAAY,SAAU,WAAY,SAAUQ,EAAUrF,EAAQsF,GAClF,OACER,SAAU,IACVS,QAAS,WACTR,KAAM,SAAUC,EAAOC,EAASC,EAAMxE,GAkBpC,QAASjB,KACPuE,GACA,IAAI2C,EACJ9D,GAAYrE,EAAGuE,WAAW6D,EAAO5B,KAAWxG,EAAGqI,QAAQD,EAAO5B,IAAU4B,EAAO5B,GAASE,EAAK4B,OACzF9C,EAAQ,IAAM,KAAOpE,IAAgB,GAEvCoE,EAAQ,EACRtD,EAAKyB,aAAa1C,QAClBiB,EAAKyB,aAAapD,WAAWqD,MAAQ,EACrCuE,EAAOjG,EAAKb,KAAKqG,KAAKxF,IAEtBiG,EAAOjG,EAAKkC,OAAOsD,KAAKxF,EAAMmC,EAAWmB,EAAQ,IAAM,GAEzC,OAAZyB,GACFH,EAASe,OAAOZ,GAEH,EAAXC,EACFiB,IAEAlB,EAAUH,EAASqB,EAAMjB,GAnC7B,GAMIqB,GANAlE,EAAYqC,EAAK4B,OACjBF,EAAS5G,EAAO6C,GAChBmB,EAAQ,EACRgD,EAAc9B,EAAK+B,eAAiB5B,EAAS5F,KAAKC,YAClDwH,EAAehC,EAAKiC,gBAAkB9B,EAAS5F,KAAKE,aACpDyH,GAAgBJ,EAAaE,GAE7BtH,EAAcsF,EAAKmC,gBAAkB5I,EAAYyG,EAAKmC,cAAgBhC,EAAS5F,KAAKG,YACpF6F,EAAU,KACVC,EAAWR,EAAKS,SAAWN,EAAS5F,KAAKL,KAEzC8F,GAAKoC,gBACPP,EAAc/B,EAAMuC,MAAMrC,EAAKoC,iBAAmB7I,EAAYuG,EAAMuC,MAAMrC,EAAKoC,eAAiBpC,EAAKoC,eA2BvGrC,EAAQiB,KAAK,QAAS,WAChBrD,GACFpD,MAIAsH,IACF/C,EAAwB,YAAhB+C,EAA4B,EAAI,EACxCtH,KAIFuF,EAAMxC,OAAO,WACX,MAAO9B,GAAKyB,aAAa1C,MACxB,SAAUiD,GACPA,EAASG,YAAcA,GACzBmB,EAAQ,EACRiB,EACGyB,YAAYM,GACZN,YAAYQ,KAEflD,EAAQtB,EAASI,WAAY,EAAO,EAAI,EACxCmC,EACGyB,YAAYU,EAAapD,EAAQ,IACjCyC,SAASW,EAAapD,EAAQ,OAElC,QAKXxF,EAAGE,OAAO,eACPmG,UAAU,gBAAiB,WAAY,SAAUQ,GAChD,OACEP,SAAU,KACVS,QAAS,WACTP,OACEwC,cAAe,KACfC,iBAAkB,KAClBC,aAAc,KAEhBC,YAAa,SAAU1C,EAAS2C,GAC9B,MAAIA,GAAMC,WACDD,EAAMC,WAERxC,EAAStG,WAAWC,UAE7B+F,KAAM,SAAUC,EAAOC,EAAS2C,EAAOlH,GAQrC,QAASoH,KACP,GAEIC,GACAC,EAHAC,EAAkBvH,EAAKyB,aAAapD,WACpCqD,EAAQ,EAGR8F,EAAWlD,EAAMmD,WAerB,KAdAnD,EAAM3C,eAAiB4F,EAAgB5F,eACvC2C,EAAMmD,YAAczE,KAAK0E,MAAMH,EAAgB7F,MAAQ6F,EAAgBzE,QAAU,EAEjFpB,EAAQsB,KAAK2E,IAAIjG,EAAO4C,EAAMmD,YAAczE,KAAK4E,IAAI5E,KAAK0E,MAAMpD,EAAMyC,iBAAmB,KACzFM,EAAM3F,EAAQ4C,EAAMyC,iBAEhBM,EAAME,EAAgBxE,gBACxBsE,EAAME,EAAgBxE,cAAgB,EACtCrB,EAAQsB,KAAK2E,IAAI,EAAGN,EAAM/C,EAAMyC,mBAGlCzC,EAAMuD,SACNvD,EAAMwD,SAAWP,EAAgBxE,cAE5BuE,EAAI5F,EAAW2F,EAAJC,EAASA,IACvBhD,EAAMuD,MAAME,KAAKT,EAGfE,KAAalD,EAAMmD,aACrBnD,EAAM0C,cAAcgB,QAAS1D,EAAMmD,cA/BvCnD,EAAMwC,cAAgBxC,EAAMwC,eAAkBxC,EAAmB,cAAIK,EAAStG,WAAWE,YACzF+F,EAAMyC,iBAAmBzC,EAAMyC,kBAAqBzC,EAAsB,iBAAIK,EAAStG,WAAWG,eAElG8F,EAAMmD,YAAc,EACpBnD,EAAMuD,SAgCNvD,EAAMxC,OAAO,WACX,MAAO9B,GAAKyB,aAAapD,YACxB+I,GAAQ,GAGX9C,EAAMxC,OAAO,gBAAiB,SAAUE,EAAUC,GAC5CD,IAAaC,GACfqC,EAAM2D,WAAW,KAIrB3D,EAAMxC,OAAO,mBAAoBsF,GAGjC9C,EAAM2D,WAAa,SAAUC,GACvBA,EAAO,GAAKA,GAAQ5D,EAAMwD,UAC5B9H,EAAKkD,OAAOgF,EAAO,GAAK5D,EAAMwC,cAAexC,EAAMwC,gBAIlD9G,EAAKyB,aAAapD,WAAWyE,QAChC9C,EAAKkD,MAAM,EAAGoB,EAAMwC,oBAM9BhJ,EAAGE,OAAO,eACPmG,UAAU,UAAW,WAAY,WAAY,SAAUgE,EAAQvD,GAC9D,OACEC,QAAS,UACTP,OACE8D,OAAQ,KAEV/D,MAEEgE,IAAK,SAAU/D,EAAOC,EAAS2C,EAAOlH,GAEpC,GAAIsI,GAAc,IAEdxK,GAAGuE,WAAWiC,EAAM8D,UACtBpI,EAAKkE,qBACLlE,EAAKb,KAAO,WAUV,MARoB,QAAhBmJ,GACF1D,EAASe,OAAO2C,GAGlBA,EAAc1D,EAAS,WACrBN,EAAM8D,OAAOpI,EAAKyB,aAAczB,IAC/BmI,EAAOhJ,KAAKT,UAOrB6J,KAAM,SAAUjE,EAAOC,EAAS2C,EAAOlH,GACrCA,EAAKb,cAMZqJ","file":"smart-table.min.js","sourcesContent":["(function (ng, undefined){\n    'use strict';\n\nng.module('smart-table', []).run(['$templateCache', function ($templateCache) {\n    $templateCache.put('template/smart-table/pagination.html',\n        '<nav ng-if=\"numPages && pages.length >= 2\"><ul class=\"pagination\">' +\n        '<li ng-repeat=\"page in pages\" ng-class=\"{active: page==currentPage}\"><a ng-click=\"selectPage(page)\">{{page}}</a></li>' +\n        '</ul></nav>');\n}]);\n\n\nng.module('smart-table')\n  .constant('stConfig', {\n    pagination: {\n      template: 'template/smart-table/pagination.html',\n      itemsByPage: 10,\n      displayedPages: 5\n    },\n    search: {\n      delay: 400, // ms\n      inputEvent: 'input'\n    },\n    select: {\n      mode: 'single',\n      selectedClass: 'st-selected'\n    },\n    sort: {\n      ascentClass: 'st-sort-ascent',\n      descentClass: 'st-sort-descent',\n      skipNatural: false,\n      delay:300\n    },\n    pipe: {\n      delay: 100 //ms\n    }\n  });\nng.module('smart-table')\n  .controller('stTableController', ['$scope', '$parse', '$filter', '$attrs', function StTableController ($scope, $parse, $filter, $attrs) {\n    var propertyName = $attrs.stTable;\n    var displayGetter = $parse(propertyName);\n    var displaySetter = displayGetter.assign;\n    var safeGetter;\n    var orderBy = $filter('orderBy');\n    var filter = $filter('filter');\n    var safeCopy = copyRefs(displayGetter($scope));\n    var tableState = {\n      sort: {},\n      search: {},\n      pagination: {\n        start: 0,\n        totalItemCount: 0\n      }\n    };\n    var filtered;\n    var pipeAfterSafeCopy = true;\n    var ctrl = this;\n    var lastSelected;\n    var lastHighlighted;\n\n    function copyRefs (src) {\n      return src ? [].concat(src) : [];\n    }\n\n    function updateSafeCopy () {\n      safeCopy = copyRefs(safeGetter($scope));\n      if (pipeAfterSafeCopy === true) {\n        ctrl.pipe();\n      }\n    }\n\n    function deepDelete (object, path) {\n      if (path.indexOf('.') != -1) {\n        var partials = path.split('.');\n        var key = partials.pop();\n        var parentPath = partials.join('.');\n        var parentObject = $parse(parentPath)(object)\n        delete parentObject[key];\n        if (Object.keys(parentObject).length == 0) {\n          deepDelete(object, parentPath);\n        }\n      } else {\n        delete object[path];\n      }\n    }\n\n    if ($attrs.stSafeSrc) {\n      safeGetter = $parse($attrs.stSafeSrc);\n      $scope.$watch(function () {\n        var safeSrc = safeGetter($scope);\n        return safeSrc ? safeSrc.length : 0;\n\n      }, function (newValue, oldValue) {\n        if (newValue !== safeCopy.length) {\n          updateSafeCopy();\n        }\n      });\n      $scope.$watch(function () {\n        return safeGetter($scope);\n      }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          tableState.pagination.start = 0;\n          lastHighlighted = false;\n          updateSafeCopy();\n        }\n      });\n    }\n\n    /**\n     * sort the rows\n     * @param {Function | String} predicate - function or string which will be used as predicate for the sorting\n     * @param [reverse] - if you want to reverse the order\n     */\n    this.sortBy = function sortBy (predicate, reverse) {\n      tableState.sort.predicate = predicate;\n      tableState.sort.reverse = reverse === true;\n\n      if (ng.isFunction(predicate)) {\n        tableState.sort.functionName = predicate.name;\n      } else {\n        delete tableState.sort.functionName;\n      }\n\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * search matching rows\n     * @param {String} input - the input string\n     * @param {String} [predicate] - the property name against you want to check the match, otherwise it will search on all properties\n     */\n    this.search = function search (input, predicate) {\n      var predicateObject = tableState.search.predicateObject || {};\n      var prop = predicate ? predicate : '$';\n\n      input = ng.isString(input) ? input.trim() : input;\n      $parse(prop).assign(predicateObject, input);\n      // to avoid to filter out null value\n      if (!input) {\n        deepDelete(predicateObject, prop);\n      }\n      tableState.search.predicateObject = predicateObject;\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * this will chain the operations of sorting and filtering based on the current table state (sort options, filtering, ect)\n     */\n    this.pipe = function pipe () {\n      var pagination = tableState.pagination;\n      var output;\n      filtered = tableState.search.predicateObject ? filter(safeCopy, tableState.search.predicateObject) : safeCopy;\n      if (tableState.sort.predicate) {\n        filtered = orderBy(filtered, tableState.sort.predicate, tableState.sort.reverse);\n      }\n      pagination.totalItemCount = filtered.length;\n      if (pagination.number !== undefined) {\n        pagination.numberOfPages = filtered.length > 0 ? Math.ceil(filtered.length / pagination.number) : 1;\n        pagination.start = pagination.start >= filtered.length ? (pagination.numberOfPages - 1) * pagination.number : pagination.start;\n        output = filtered.slice(pagination.start, pagination.start + parseInt(pagination.number));\n      }\n      displaySetter($scope, output || filtered);\n    };\n\n    /**\n     * select a dataRow (it will add the attribute isSelected to the row object)\n     * @param {Object} row - the row to select\n     * @param {String} [mode] - \"single\" or \"multiple\" (multiple by default)\n     */\n    this.select = function select (row, mode) {\n      var rows = copyRefs(displayGetter($scope));\n      var index = rows.indexOf(row);\n      if (index !== -1) {\n        if (mode === 'single') {\n          row.isSelected = row.isSelected !== true;\n          if (lastSelected) {\n            lastSelected.isSelected = false;\n          }\n          lastSelected = row.isSelected === true ? row : undefined;\n        } else {\n          rows[index].isSelected = !rows[index].isSelected;\n        }\n      }\n    };\n\n    /**\n     * highlight a dataRow (it will set attribute isHighlighted to true to the row object)\n     * and un-highlight the previously highlighted row. if there was no previously\n     * highlighted row, set it to be the first row in the collection\n     * @param {Object} row - the row to highlight\n     */\n    this.highlight = function highlight(rowToHighlight) {\n      //naive implementation of highlight toggle on a list\n      var allRows = copyRefs(displayGetter($scope));\n      allRows.map(function(row) {\n        row.isHighlighted = false;\n      });\n      rowToHighlight.isHighlighted = true;\n    };\n\n    /**\n     * take a slice of the current sorted/filtered collection (pagination)\n     *\n     * @param {Number} start - start index of the slice\n     * @param {Number} number - the number of item in the slice\n     */\n    this.slice = function splice (start, number) {\n      tableState.pagination.start = start;\n      tableState.pagination.number = number;\n      return this.pipe();\n    };\n\n    /**\n     * return the current state of the table\n     * @returns {{sort: {}, search: {}, pagination: {start: number}}}\n     */\n    this.tableState = function getTableState () {\n      return tableState;\n    };\n\n    this.getFilteredCollection = function getFilteredCollection () {\n      return filtered || safeCopy;\n    };\n\n    /**\n     * Use a different filter function than the angular FilterFilter\n     * @param filterName the name under which the custom filter is registered\n     */\n    this.setFilterFunction = function setFilterFunction (filterName) {\n      filter = $filter(filterName);\n    };\n\n    /**\n     * Use a different function than the angular orderBy\n     * @param sortFunctionName the name under which the custom order function is registered\n     */\n    this.setSortFunction = function setSortFunction (sortFunctionName) {\n      orderBy = $filter(sortFunctionName);\n    };\n\n    /**\n     * Usually when the safe copy is updated the pipe function is called.\n     * Calling this method will prevent it, which is something required when using a custom pipe function\n     */\n    this.preventPipeOnWatch = function preventPipe () {\n      pipeAfterSafeCopy = false;\n    };\n  }])\n  .directive('stTable', function () {\n    return {\n      restrict: 'A',\n      controller: 'stTableController',\n      link: function (scope, element, attr, ctrl) {\n\n        if (attr.stSetFilter) {\n          ctrl.setFilterFunction(attr.stSetFilter);\n        }\n\n        if (attr.stSetSort) {\n          ctrl.setSortFunction(attr.stSetSort);\n        }\n      }\n    };\n  });\n\nng.module('smart-table')\n  .directive('stSearch', ['stConfig', '$timeout','$parse', function (stConfig, $timeout, $parse) {\n    return {\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n        var tableCtrl = ctrl;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.search.delay;\n        var event = attr.stInputEvent || stConfig.search.inputEvent;\n\n        attr.$observe('stSearch', function (newValue, oldValue) {\n          var input = element[0].value;\n          if (newValue !== oldValue && input) {\n            ctrl.tableState().search = {};\n            tableCtrl.search(input, newValue);\n          }\n        });\n\n        //table state -> view\n        scope.$watch(function () {\n          return ctrl.tableState().search;\n        }, function (newValue, oldValue) {\n          var predicateExpression = attr.stSearch || '$';\n          if (newValue.predicateObject && $parse(predicateExpression)(newValue.predicateObject) !== element[0].value) {\n            element[0].value = $parse(predicateExpression)(newValue.predicateObject) || '';\n          }\n        }, true);\n\n        // view -> table state\n        element.bind(event, function (evt) {\n          evt = evt.originalEvent || evt;\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n\n          promise = $timeout(function () {\n            tableCtrl.search(evt.target.value, attr.stSearch || '');\n            promise = null;\n          }, throttle);\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSelectRow', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      scope: {\n        row: '=stSelectRow'\n      },\n      link: function (scope, element, attr, ctrl) {\n        var mode = attr.stSelectMode || stConfig.select.mode;\n        element.bind('click', function () {\n          scope.$apply(function () {\n            ctrl.select(scope.row, mode);\n          });\n        });\n\n        scope.$watch('row.isSelected', function (newValue) {\n          if (newValue === true) {\n            element.addClass(stConfig.select.selectedClass);\n          } else {\n            element.removeClass(stConfig.select.selectedClass);\n          }\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSort', ['stConfig', '$parse', '$timeout', function (stConfig, $parse, $timeout) {\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n\n        var predicate = attr.stSort;\n        var getter = $parse(predicate);\n        var index = 0;\n        var classAscent = attr.stClassAscent || stConfig.sort.ascentClass;\n        var classDescent = attr.stClassDescent || stConfig.sort.descentClass;\n        var stateClasses = [classAscent, classDescent];\n        var sortDefault;\n        var skipNatural = attr.stSkipNatural !== undefined ? attr.stSkipNatural : stConfig.sort.skipNatural;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.sort.delay;\n\n        if (attr.stSortDefault) {\n          sortDefault = scope.$eval(attr.stSortDefault) !== undefined ? scope.$eval(attr.stSortDefault) : attr.stSortDefault;\n        }\n\n        //view --> table state\n        function sort () {\n          index++;\n          var func;\n          predicate = ng.isFunction(getter(scope)) || ng.isArray(getter(scope)) ? getter(scope) : attr.stSort;\n          if (index % 3 === 0 && !!skipNatural !== true) {\n            //manual reset\n            index = 0;\n            ctrl.tableState().sort = {};\n            ctrl.tableState().pagination.start = 0;\n            func = ctrl.pipe.bind(ctrl);\n          } else {\n            func = ctrl.sortBy.bind(ctrl, predicate, index % 2 === 0);\n          }\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n          if (throttle < 0) {\n            func();\n          } else {\n            promise = $timeout(func, throttle);\n          }\n        }\n\n        element.bind('click', function sortClick () {\n          if (predicate) {\n            sort();\n          }\n        });\n\n        if (sortDefault) {\n          index = sortDefault === 'reverse' ? 1 : 0;\n          sort();\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().sort;\n        }, function (newValue) {\n          if (newValue.predicate !== predicate) {\n            index = 0;\n            element\n              .removeClass(classAscent)\n              .removeClass(classDescent);\n          } else {\n            index = newValue.reverse === true ? 2 : 1;\n            element\n              .removeClass(stateClasses[index % 2])\n              .addClass(stateClasses[index - 1]);\n          }\n        }, true);\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPagination', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'EA',\n      require: '^stTable',\n      scope: {\n        stItemsByPage: '=?',\n        stDisplayedPages: '=?',\n        stPageChange: '&'\n      },\n      templateUrl: function (element, attrs) {\n        if (attrs.stTemplate) {\n          return attrs.stTemplate;\n        }\n        return stConfig.pagination.template;\n      },\n      link: function (scope, element, attrs, ctrl) {\n\n        scope.stItemsByPage = scope.stItemsByPage ? +(scope.stItemsByPage) : stConfig.pagination.itemsByPage;\n        scope.stDisplayedPages = scope.stDisplayedPages ? +(scope.stDisplayedPages) : stConfig.pagination.displayedPages;\n\n        scope.currentPage = 1;\n        scope.pages = [];\n\n        function redraw () {\n          var paginationState = ctrl.tableState().pagination;\n          var start = 1;\n          var end;\n          var i;\n          var prevPage = scope.currentPage;\n          scope.totalItemCount = paginationState.totalItemCount;\n          scope.currentPage = Math.floor(paginationState.start / paginationState.number) + 1;\n\n          start = Math.max(start, scope.currentPage - Math.abs(Math.floor(scope.stDisplayedPages / 2)));\n          end = start + scope.stDisplayedPages;\n\n          if (end > paginationState.numberOfPages) {\n            end = paginationState.numberOfPages + 1;\n            start = Math.max(1, end - scope.stDisplayedPages);\n          }\n\n          scope.pages = [];\n          scope.numPages = paginationState.numberOfPages;\n\n          for (i = start; i < end; i++) {\n            scope.pages.push(i);\n          }\n\n          if (prevPage !== scope.currentPage) {\n            scope.stPageChange({newPage: scope.currentPage});\n          }\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().pagination;\n        }, redraw, true);\n\n        //scope --> table state  (--> view)\n        scope.$watch('stItemsByPage', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            scope.selectPage(1);\n          }\n        });\n\n        scope.$watch('stDisplayedPages', redraw);\n\n        //view -> table state\n        scope.selectPage = function (page) {\n          if (page > 0 && page <= scope.numPages) {\n            ctrl.slice((page - 1) * scope.stItemsByPage, scope.stItemsByPage);\n          }\n        };\n\n        if (!ctrl.tableState().pagination.number) {\n          ctrl.slice(0, scope.stItemsByPage);\n        }\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPipe', ['stConfig', '$timeout', function (config, $timeout) {\n    return {\n      require: 'stTable',\n      scope: {\n        stPipe: '='\n      },\n      link: {\n\n        pre: function (scope, element, attrs, ctrl) {\n\n          var pipePromise = null;\n\n          if (ng.isFunction(scope.stPipe)) {\n            ctrl.preventPipeOnWatch();\n            ctrl.pipe = function () {\n\n              if (pipePromise !== null) {\n                $timeout.cancel(pipePromise)\n              }\n\n              pipePromise = $timeout(function () {\n                scope.stPipe(ctrl.tableState(), ctrl);\n              }, config.pipe.delay);\n\n              return pipePromise;\n            }\n          }\n        },\n\n        post: function (scope, element, attrs, ctrl) {\n          ctrl.pipe();\n        }\n      }\n    };\n  }]);\n\n})(angular);"],"sourceRoot":"/source/"}